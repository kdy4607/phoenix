-- ========================================
-- 7. 예약 좌석 테이블 (RESERVATION_SEATS)
-- ========================================

-- 테이블 생성
CREATE TABLE RESERVATION_SEATS (
                                   RESERVATION_SEAT_ID NUMBER(8) PRIMARY KEY,  -- 예약좌석은 가장 많을 수 있으므로 8자리
                                   RESERVATION_ID NUMBER(6) NOT NULL,
                                   SEAT_ID NUMBER(3) NOT NULL,
                                   CONSTRAINT FK_RES_SEATS_RESERVATION FOREIGN KEY (RESERVATION_ID) REFERENCES RESERVATIONS(RESERVATION_ID),
                                   CONSTRAINT FK_RES_SEATS_SEAT FOREIGN KEY (SEAT_ID) REFERENCES SEATS(SEAT_ID)
);

-- 시퀀스 생성
CREATE SEQUENCE SEQ_RESERVATION_SEAT_ID START WITH 1 INCREMENT BY 1 MAXVALUE 99999999;

-- 예약 좌석 데이터 삽입
-- 예약 1번 (김테스트, 성인 2명) - 1관 A5, A6
INSERT INTO RESERVATION_SEATS (RESERVATION_SEAT_ID, RESERVATION_ID, SEAT_ID)
VALUES (1, 1, 5);  -- 1관 A행 5번
INSERT INTO RESERVATION_SEATS (RESERVATION_SEAT_ID, RESERVATION_ID, SEAT_ID)
VALUES (2, 1, 6);  -- 1관 A행 6번

-- 예약 2번 (김테스트, 성인1+청소년1+어린이1) - 1관 B3, B4, B5
INSERT INTO RESERVATION_SEATS (RESERVATION_SEAT_ID, RESERVATION_ID, SEAT_ID)
VALUES (3, 2, 13); -- 1관 B행 3번
INSERT INTO RESERVATION_SEATS (RESERVATION_SEAT_ID, RESERVATION_ID, SEAT_ID)
VALUES (4, 2, 14); -- 1관 B행 4번
INSERT INTO RESERVATION_SEATS (RESERVATION_SEAT_ID, RESERVATION_ID, SEAT_ID)
VALUES (5, 2, 15); -- 1관 B행 5번

-- 예약 3번 (이영화, 성인 1명) - 1관 C7
INSERT INTO RESERVATION_SEATS (RESERVATION_SEAT_ID, RESERVATION_ID, SEAT_ID)
VALUES (6, 3, 27); -- 1관 C행 7번

-- 예약 4번 (이영화, 성인 2명) - IMAX관 A8, A9
INSERT INTO RESERVATION_SEATS (RESERVATION_SEAT_ID, RESERVATION_ID, SEAT_ID)
VALUES (7, 4, 148); -- 3관(IMAX) A행 8번
INSERT INTO RESERVATION_SEATS (RESERVATION_SEAT_ID, RESERVATION_ID, SEAT_ID)
VALUES (8, 4, 149); -- 3관(IMAX) A행 9번

-- 예약 5번 (박시네마, 성인 1명) - IMAX관 D5
INSERT INTO RESERVATION_SEATS (RESERVATION_SEAT_ID, RESERVATION_ID, SEAT_ID)
VALUES (9, 5, 175); -- 3관(IMAX) D행 5번

-- 예약 6번 (최영화, 성인3+청소년1) - IMAX관 B1~B4
INSERT INTO RESERVATION_SEATS (RESERVATION_SEAT_ID, RESERVATION_ID, SEAT_ID)
VALUES (10, 6, 151); -- 3관(IMAX) B행 1번
INSERT INTO RESERVATION_SEATS (RESERVATION_SEAT_ID, RESERVATION_ID, SEAT_ID)
VALUES (11, 6, 152); -- 3관(IMAX) B행 2번
INSERT INTO RESERVATION_SEATS (RESERVATION_SEAT_ID, RESERVATION_ID, SEAT_ID)
VALUES (12, 6, 153); -- 3관(IMAX) B행 3번
INSERT INTO RESERVATION_SEATS (RESERVATION_SEAT_ID, RESERVATION_ID, SEAT_ID)
VALUES (13, 6, 154); -- 3관(IMAX) B행 4번

-- 예약 7번은 취소된 예약이므로 좌석 데이터 없음

-- 예약 8번 (김테스트, 성인 1명) - 1관 D8
INSERT INTO RESERVATION_SEATS (RESERVATION_SEAT_ID, RESERVATION_ID, SEAT_ID)
VALUES (14, 8, 38); -- 1관 D행 8번

-- 예약 9번 (이영화, 성인2+청소년1) - 2관 A5, A6, A7
INSERT INTO RESERVATION_SEATS (RESERVATION_SEAT_ID, RESERVATION_ID, SEAT_ID)
VALUES (15, 9, 65); -- 2관 A행 5번
INSERT INTO RESERVATION_SEATS (RESERVATION_SEAT_ID, RESERVATION_ID, SEAT_ID)
VALUES (16, 9, 66); -- 2관 A행 6번
INSERT INTO RESERVATION_SEATS (RESERVATION_SEAT_ID, RESERVATION_ID, SEAT_ID)
VALUES (17, 9, 67); -- 2관 A행 7번

-- 예약 10번 (박시네마, 성인1+어린이1) - 1관 E4, E5
INSERT INTO RESERVATION_SEATS (RESERVATION_SEAT_ID, RESERVATION_ID, SEAT_ID)
VALUES (18, 10, 44); -- 1관 E행 4번
INSERT INTO RESERVATION_SEATS (RESERVATION_SEAT_ID, RESERVATION_ID, SEAT_ID)
VALUES (19, 10, 45); -- 1관 E행 5번

-- 커밋
COMMIT;

-- 확인 쿼리
-- 예약별 좌석 정보 조회
SELECT
    r.RESERVATION_ID,
    u.U_NAME,
    m.TITLE,
    rm.ROOM_NAME,
    rt.RUN_DATE,
    rt.START_TIME,
    LISTAGG(s.SEAT_ROW || s.SEAT_NUMBER, ', ') WITHIN GROUP (ORDER BY s.SEAT_ROW, s.SEAT_NUMBER) as RESERVED_SEATS,
    r.RESERVATION_STATUS
FROM RESERVATIONS r
    JOIN USERS u ON r.U_ID = u.U_ID
    JOIN RUNTIMES rt ON r.RUNTIME_ID = rt.RUNTIME_ID
    JOIN MOVIES m ON rt.MOVIE_ID = m.MOVIE_ID
    JOIN ROOMS rm ON rt.ROOM_ID = rm.ROOM_ID
    LEFT JOIN RESERVATION_SEATS rs ON r.RESERVATION_ID = rs.RESERVATION_ID
    LEFT JOIN SEATS s ON rs.SEAT_ID = s.SEAT_ID
GROUP BY r.RESERVATION_ID, u.U_NAME, m.TITLE, rm.ROOM_NAME, rt.RUN_DATE, rt.START_TIME, r.RESERVATION_STATUS
ORDER BY r.RESERVATION_ID;

-- 상영관별 좌석 점유율
SELECT
    rm.ROOM_NAME,
    rm.TOTAL_SEATS,
    COUNT(DISTINCT rs.SEAT_ID) as RESERVED_SEATS,
    ROUND((COUNT(DISTINCT rs.SEAT_ID) / rm.TOTAL_SEATS) * 100, 2) as OCCUPANCY_RATE
FROM ROOMS rm
         LEFT JOIN SEATS s ON rm.ROOM_ID = s.ROOM_ID
         LEFT JOIN RESERVATION_SEATS rs ON s.SEAT_ID = rs.SEAT_ID
         LEFT JOIN RESERVATIONS r ON rs.RESERVATION_ID = r.RESERVATION_ID AND r.RESERVATION_STATUS = '예약완료'
GROUP BY rm.ROOM_ID, rm.ROOM_NAME, rm.TOTAL_SEATS
ORDER BY OCCUPANCY_RATE DESC;

-- 특정 상영시간의 예약된 좌석 확인 (예: 런타임 ID 1번)
SELECT
    s.SEAT_ROW,
    s.SEAT_NUMBER,
    CASE WHEN rs.SEAT_ID IS NOT NULL THEN '예약됨' ELSE '사용가능' END as STATUS
FROM SEATS s
         LEFT JOIN RESERVATION_SEATS rs ON s.SEAT_ID = rs.SEAT_ID
         LEFT JOIN RESERVATIONS r ON rs.RESERVATION_ID = r.RESERVATION_ID
    AND r.RUNTIME_ID = 1
    AND r.RESERVATION_STATUS = '예약완료'
WHERE s.ROOM_ID = 1  -- 1관
ORDER BY s.SEAT_ROW, s.SEAT_NUMBER;
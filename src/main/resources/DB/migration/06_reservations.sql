
-- ========================================
-- 6. 예약 테이블 (RESERVATIONS)
-- ========================================

-- 테이블 생성
CREATE TABLE RESERVATIONS (
                              RESERVATION_ID NUMBER(6) PRIMARY KEY,     -- 예약은 많을 수 있으므로 6자리
                              U_ID NUMBER(20) NOT NULL,
                              RUNTIME_ID NUMBER(4) NOT NULL,
                              ADULT NUMBER(2) DEFAULT 0,               -- 최대 99명
                              YOUTH NUMBER(2) DEFAULT 0,               -- 최대 99명
                              CHILD NUMBER(2) DEFAULT 0,               -- 최대 99명
                              TOTAL_AMOUNT NUMBER(8) NOT NULL,         -- 금액은 8자리까지
                              RESERVATION_STATUS VARCHAR2(20) DEFAULT '예약완료',
                              RESERVED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                              CONSTRAINT FK_RESERVATIONS_USER FOREIGN KEY (U_ID) REFERENCES USERS(U_ID),
                              CONSTRAINT FK_RESERVATIONS_RUNTIME FOREIGN KEY (RUNTIME_ID) REFERENCES RUNTIMES(RUNTIME_ID)
);

-- 시퀀스 생성
CREATE SEQUENCE SEQ_RESERVATION_ID START WITH 1 INCREMENT BY 1 MAXVALUE 999999;

-- 샘플 예약 데이터
-- 김테스트의 예약
INSERT INTO RESERVATIONS (RESERVATION_ID, U_ID, RUNTIME_ID, ADULT, YOUTH, CHILD, TOTAL_AMOUNT, RESERVATION_STATUS, RESERVED_AT)
VALUES (1, 1, 1, 2, 0, 0, 24000, '예약완료', CURRENT_TIMESTAMP - 1);

INSERT INTO RESERVATIONS (RESERVATION_ID, U_ID, RUNTIME_ID, ADULT, YOUTH, CHILD, TOTAL_AMOUNT, RESERVATION_STATUS, RESERVED_AT)
VALUES (2, 1, 24, 1, 1, 1, 30000, '예약완료', CURRENT_TIMESTAMP - 2);

-- 이영화의 예약
INSERT INTO RESERVATIONS (RESERVATION_ID, U_ID, RUNTIME_ID, ADULT, YOUTH, CHILD, TOTAL_AMOUNT, RESERVATION_STATUS, RESERVED_AT)
VALUES (3, 2, 6, 1, 0, 0, 12000, '예약완료', CURRENT_TIMESTAMP - 0.5);

INSERT INTO RESERVATIONS (RESERVATION_ID, U_ID, RUNTIME_ID, ADULT, YOUTH, CHILD, TOTAL_AMOUNT, RESERVATION_STATUS, RESERVED_AT)
VALUES (4, 2, 13, 2, 0, 0, 30000, '예약완료', CURRENT_TIMESTAMP - 1.5);

-- 박시네마의 예약
INSERT INTO RESERVATIONS (RESERVATION_ID, U_ID, RUNTIME_ID, ADULT, YOUTH, CHILD, TOTAL_AMOUNT, RESERVATION_STATUS, RESERVED_AT)
VALUES (5, 3, 4, 1, 0, 0, 15000, '예약완료', CURRENT_TIMESTAMP - 0.2);

-- 최영화의 예약 (취소된 예약도 포함)
INSERT INTO RESERVATIONS (RESERVATION_ID, U_ID, RUNTIME_ID, ADULT, YOUTH, CHILD, TOTAL_AMOUNT, RESERVATION_STATUS, RESERVED_AT)
VALUES (6, 4, 8, 3, 1, 0, 57000, '예약완료', CURRENT_TIMESTAMP - 3);

INSERT INTO RESERVATIONS (RESERVATION_ID, U_ID, RUNTIME_ID, ADULT, YOUTH, CHILD, TOTAL_AMOUNT, RESERVATION_STATUS, RESERVED_AT)
VALUES (7, 4, 25, 2, 0, 0, 24000, '예약취소', CURRENT_TIMESTAMP - 4);

-- 미래 예약들
INSERT INTO RESERVATIONS (RESERVATION_ID, U_ID, RUNTIME_ID, ADULT, YOUTH, CHILD, TOTAL_AMOUNT, RESERVATION_STATUS, RESERVED_AT)
VALUES (8, 1, 32, 1, 0, 0, 12000, '예약완료', CURRENT_TIMESTAMP);

INSERT INTO RESERVATIONS (RESERVATION_ID, U_ID, RUNTIME_ID, ADULT, YOUTH, CHILD, TOTAL_AMOUNT, RESERVATION_STATUS, RESERVED_AT)
VALUES (9, 2, 35, 2, 1, 0, 36000, '예약완료', CURRENT_TIMESTAMP);

INSERT INTO RESERVATIONS (RESERVATION_ID, U_ID, RUNTIME_ID, ADULT, YOUTH, CHILD, TOTAL_AMOUNT, RESERVATION_STATUS, RESERVED_AT)
VALUES (10, 3, 41, 1, 0, 1, 20000, '예약완료', CURRENT_TIMESTAMP);

-- 커밋
COMMIT;

-- 확인 쿼리
-- 예약 현황 조회
SELECT
    r.RESERVATION_ID,
    u.U_NAME,
    m.TITLE,
    rm.ROOM_NAME,
    rt.RUN_DATE,
    rt.START_TIME,
    r.ADULT + r.YOUTH + r.CHILD as TOTAL_PEOPLE,
    r.TOTAL_AMOUNT,
    r.RESERVATION_STATUS,
    r.RESERVED_AT
FROM RESERVATIONS r
         JOIN USERS u ON r.U_ID = u.U_ID
         JOIN RUNTIMES rt ON r.RUNTIME_ID = rt.RUNTIME_ID
         JOIN MOVIES m ON rt.MOVIE_ID = m.MOVIE_ID
         JOIN ROOMS rm ON rt.ROOM_ID = rm.ROOM_ID
ORDER BY r.RESERVED_AT DESC;

-- 사용자별 예약 통계
SELECT
    u.U_NAME,
    COUNT(r.RESERVATION_ID) as TOTAL_RESERVATIONS,
    SUM(CASE WHEN r.RESERVATION_STATUS = '예약완료' THEN 1 ELSE 0 END) as ACTIVE_RESERVATIONS,
    SUM(CASE WHEN r.RESERVATION_STATUS = '예약취소' THEN 1 ELSE 0 END) as CANCELLED_RESERVATIONS,
    SUM(CASE WHEN r.RESERVATION_STATUS = '예약완료' THEN r.TOTAL_AMOUNT ELSE 0 END) as TOTAL_SPENT
FROM USERS u
         LEFT JOIN RESERVATIONS r ON u.U_ID = r.U_ID
GROUP BY u.U_ID, u.U_NAME
ORDER BY TOTAL_SPENT DESC;

-- 영화별 예약 통계
SELECT
    m.TITLE,
    COUNT(r.RESERVATION_ID) as TOTAL_RESERVATIONS,
    SUM(r.ADULT + r.YOUTH + r.CHILD) as TOTAL_AUDIENCE,
    SUM(r.TOTAL_AMOUNT) as TOTAL_REVENUE
FROM MOVIES m
         LEFT JOIN RUNTIMES rt ON m.MOVIE_ID = rt.MOVIE_ID
         LEFT JOIN RESERVATIONS r ON rt.RUNTIME_ID = r.RUNTIME_ID AND r.RESERVATION_STATUS = '예약완료'
GROUP BY m.MOVIE_ID, m.TITLE
ORDER BY TOTAL_REVENUE DESC;